generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  createdAt    DateTime @default(now())
  updatesAt    DateTime @updatedAt
  isAdmin      Boolean  @default(false)
  username     String   @unique
  password     String
  refreshtoken String   @default("")
}

model Employee {
  id            Int       @id @default(autoincrement())
  name          String
  paymentMethod String
  paymentAmount Float     @default(0)
  balance       Debt[]
  payments      Expense[]

  @@unique([name, paymentMethod])
}

model Investor {
  id       Int       @id @default(autoincrement())
  name     String
  expenses Expense[]
}

model Client {
  id       Int      @id @default(autoincrement())
  name     String   @unique
  debits   Debit[]
  payments Income[]
}

model Trader {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  debts    Debt[]
  payments Expense[]
}

model Debit {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  amount      Float
  description String
  Client      Client?  @relation(fields: [clientId], references: [id])
  clientId    Int?
}

model Debt {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  amount      Float
  description String
  Trader      Trader?   @relation(fields: [traderId], references: [id])
  traderId    Int?
  Employee    Employee? @relation(fields: [employeeId], references: [id])
  employeeId  Int?
}

model Expense {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  amount      Float
  description String
  work        Boolean   @default(false)
  Trader      Trader?   @relation(fields: [traderId], references: [id])
  traderId    Int?
  Employee    Employee? @relation(fields: [employeeId], references: [id])
  employeeId  Int?
  Investor    Investor? @relation(fields: [investorId], references: [id])
  investorId  Int?
}

model Income {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  amount      Float
  description String
  Client      Client?  @relation(fields: [clientId], references: [id])
  clientId    Int?
}
